test_name "#19393: Safe YAML deserialization"
step "Verify Puppet safely deserializes YAML encoded objects"

# Check if the master is running with a Psych YAML engine.  If not, don't test.
check_for_psych_cmd = "ruby -ryaml -e 'exit (defined?(YAML::ENGINE) and YAML::ENGINE.yamler == \"psych\") ? 3 : 7'"

master_uses_psych = 'unknown'
on master, check_for_psych_cmd, :acceptable_exit_codes => [3,7] do |result|
  case result.exit_code
  when 3
    master_uses_psych = true
  when 7
    master_uses_psych = false
  else
    raise "Could not determine if the system under test uses the YAML Psych engine."
  end
end

if master_uses_psych
  with_master_running_on(master) do
    unsafe_data = "--- !ruby/hash:Array {}"

    cmd = [
      "curl -k -X PUT",
      "--cacert \"$(puppet master --configprint cacert)\"",
      "--cert \"$(puppet master --configprint hostcert)\"",
      "--key \"$(puppet master --configprint hostprivkey)\"",
      "-H 'Content-Type: text/yaml'",
      "-d '#{unsafe_data}'",
      "\"https://#{master}:8140/production/report/$(puppet master --configprint certname)\""
    ].join(" ")

    on master, cmd, :acceptable_exit_codes => [0] do
      msg = "(#19393) (CVE-2013-1655) Puppet master accepted illegal YAML, " +
        "expected rejection with message 'Illegal YAML mapping found ... " +
        "please use ... instead'"
      assert_match(/Illegal YAML mapping found/, stdout, msg)
    end
  end
else
  skip_test "Cannot validate CVE-2013-1655 unless the master is running with the Psych YAML engine"
end
